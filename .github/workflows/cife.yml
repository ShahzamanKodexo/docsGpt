name: Build, push, and deploy DocsGPT-FE Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - mainsss

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images to docker.io and ghcr.io
        uses: docker/build-push-action@v4
        with:
          file: "./frontend/Dockerfile"
          platforms: linux/amd64
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/docsgpt-fe:latest
            ghcr.io/${{ github.repository_owner }}/docsgpt-fe:latest

      - name: Generate deployment package
        run: zip -r deploy.zip . -x .git ./node_modules

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.MY_AWS_SECRET_KEY }}
          application_name: docsgpt
          environment_name: Docsgpt-main
          version_label: "Docsgpt-main-${{ steps.format-time.outputs.replaced }}"
          region: us-east-1
          deployment_package: deploy.zip

      - name: Deployed!
        run: echo App deployed to ELB
